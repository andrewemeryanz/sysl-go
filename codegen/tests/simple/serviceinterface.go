// Code generated by sysl DO NOT EDIT.
package simple

import (
	"context"
)

// DefaultSimpleImpl  ...
type DefaultSimpleImpl struct {
}

// NewDefaultSimpleImpl for Simple
func NewDefaultSimpleImpl() *DefaultSimpleImpl {
	return &DefaultSimpleImpl{}
}

// GetJustOkAndJustErrorList Client
type GetJustOkAndJustErrorListClient struct {
}

// GetJustReturnErrorList Client
type GetJustReturnErrorListClient struct {
}

// GetJustReturnOkList Client
type GetJustReturnOkListClient struct {
}

// GetOkTypeAndJustErrorList Client
type GetOkTypeAndJustErrorListClient struct {
}

// GetOopsList Client
type GetOopsListClient struct {
}

// GetRawList Client
type GetRawListClient struct {
}

// GetRawIntList Client
type GetRawIntListClient struct {
}

// GetStuffList Client
type GetStuffListClient struct {
}

// PostStuff Client
type PostStuffClient struct {
}

// ServiceInterface for Simple
type ServiceInterface struct {
	GetJustOkAndJustErrorList func(ctx context.Context, req *GetJustOkAndJustErrorListRequest, client GetJustOkAndJustErrorListClient) error
	GetJustReturnErrorList    func(ctx context.Context, req *GetJustReturnErrorListRequest, client GetJustReturnErrorListClient) error
	GetJustReturnOkList       func(ctx context.Context, req *GetJustReturnOkListRequest, client GetJustReturnOkListClient) error
	GetOkTypeAndJustErrorList func(ctx context.Context, req *GetOkTypeAndJustErrorListRequest, client GetOkTypeAndJustErrorListClient) (*Response, error)
	GetOopsList               func(ctx context.Context, req *GetOopsListRequest, client GetOopsListClient) (*Response, error)
	GetRawList                func(ctx context.Context, req *GetRawListRequest, client GetRawListClient) (*Str, error)
	GetRawIntList             func(ctx context.Context, req *GetRawIntListRequest, client GetRawIntListClient) (*Integer, error)
	GetStuffList              func(ctx context.Context, req *GetStuffListRequest, client GetStuffListClient) (*Stuff, error)
	PostStuff                 func(ctx context.Context, req *PostStuffRequest, client PostStuffClient) (*Str, error)
}
